import { test, expect } from '@playwright/test';
const baseUrl = 'https://www.preprod.kyg.ai';
test.setTimeout(100000)

test('test', async ({ page }) => {
    await page.goto(`${baseUrl}/login`)
    await page.goto(`${baseUrl}/login?lang=en`)
  await expect(page.getByText('login', { exact: true })).toBeVisible()
  await expect(page.getByLabel('Attribute Definitions').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('User Guide').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('Contact Us').getByRole('link')).toBeVisible()
  await expect(page.getByRole('img', { name: 'Logo horizontal' })).toBeVisible()
  await expect(page.getByText('LoginEmailForgot email?')).toBeVisible()
  await expect(page.locator('form')).toContainText('Email')
  await expect(page.locator('form')).toContainText('Password')
  await expect(page.locator('form')).toContainText('Forgot email?')
  await expect(page.locator('form')).toContainText('Forgot password?')
  await expect(page.getByRole('main')).toContainText('Confidential')
  await expect(page.getByRole('main')).toContainText('Non-Disclosure Agreement')
  await expect(page.getByRole('main')).toContainText('Terms of Use')
  await expect(page.getByRole('main')).toContainText('Privacy')
  await expect(page.getByRole('main')).toContainText('Copyright')
  await page.locator('input[name="email"]').click()
  await page.locator('input[name="email"]').fill('Extadmin1@te.com')
  await page.locator('input[name="password"]').click()
  await page.locator('input[name="password"]').fill('123456789')
  await page.getByLabel('Log In').click()
  await page.goto('https://www.preprod.kyg.ai/products')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10&workqueueType=User')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10&workqueueType=User&productType=User')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10&workqueueType=User&productType=User&entity=Product')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10&workqueueType=User&productType=User&entity=Product&orderBy=KYGID')
  await page.goto('https://www.preprod.kyg.ai/products?page=1&limit=10&workqueueType=User&productType=User&entity=Product&orderBy=KYGID&orderType=DESC')
  await expect(page.getByRole('link', { name: 'Logo' })).toBeVisible()
  await expect(page.getByLabel('Desktop').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('Advanced Search').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('Marketplace').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('Notifications').locator('path').first()).toBeVisible()
  await expect(page.getByLabel('Notifications').getByRole('img')).toBeVisible()
  await expect(page.getByLabel('Emails').locator('polyline')).toBeVisible()
  await expect(page.getByLabel('Attribute Definitions').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('User Guide').getByRole('link')).toBeVisible()
  await expect(page.getByLabel('Contact Us').getByRole('link')).toBeVisible()
  await expect(page.getByRole('button', { name: 'Managed Products', exact: true })).toBeVisible()
  await expect(page.getByRole('button', { name: 'Assessments', exact: true })).toBeVisible()
  await expect(page.getByRole('button', { name: 'My Queue Managed Products' })).toBeVisible()
  await expect(page.getByPlaceholder('Search by Item Number')).toBeVisible()
  await expect(page.locator('#ApplicationHeaderMainContainer')).toContainText('Desktop')
});